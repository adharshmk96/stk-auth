{
	"info": {
		"_postman_id": "8d65f8a7-3d16-4c08-a374-9e9eca258a05",
		"name": "valid requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8259072"
	},
	"item": [
		{
			"name": "register a user with correct info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verify the response code",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"// Verify the response body",
							"pm.test(\"Response body contains expected data\", function () {",
							"    // Parse the response body as JSON",
							"    var jsonData = pm.response.json();",
							"",
							"    // Verify id is set",
							"    pm.expect(jsonData.id).to.not.be.undefined",
							"",
							"    // Verify the username",
							"    pm.expect(jsonData.username).to.eql(pm.environment.get(\"random_user\"));",
							"",
							"    // Verify the email",
							"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"random_email\"));",
							"",
							"    // Verify the password",
							"    pm.expect(jsonData.password).to.be.undefined;",
							"",
							"    // Verify the presence of 'created_at' field",
							"    pm.expect(jsonData.created_at).to.not.be.undefined;",
							"",
							"    // Verify the presence of 'updated_at' field",
							"    pm.expect(jsonData.updated_at).to.not.be.undefined;",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function generateRandomEmail() {",
							"    const randomString = Math.random().toString(36).substr(2, 5);",
							"    const domain = \"gmail.com\";",
							"",
							"    return `testuser_${randomString}@${domain}`;",
							"}",
							"",
							"function generateRandomUsername() {",
							"  const username = Math.random().toString(36).substr(2, 8);",
							"  return username;",
							"}",
							"",
							"const randomUsername = generateRandomUsername();",
							"const randomEmail = generateRandomEmail();",
							"",
							"pm.environment.set(\"random_user\", randomUsername)",
							"pm.environment.set(\"random_email\", randomEmail)",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{random_user}}\",\n    \"email\": \"{{random_email}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/auth/register",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "session login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verify the response code",
							"pm.test(\"status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"session cookie is set\", function () {",
							"\tpm.expect(pm.cookies.has(\"stk_session_id\")).to.be.true;",
							"});",
							"",
							"pm.environment.set(\"session_cookie\", pm.cookies.get(\"stk_session_id\").value);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{random_email}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/auth/session/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"session",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "session login jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verify the response code",
							"pm.test(\"status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"session cookie is set\", function () {",
							"    pm.expect(pm.cookies.has(\"stk_session_token\")).to.be.true;",
							"});",
							"",
							"pm.environment.set(\"session_cookie\", pm.cookies.get(\"stk_session_token\").value);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{random_email}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/auth/session/login/token",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"session",
						"login",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "session user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response username matches logged in user name\", function () {",
							"// Parse the response body as JSON",
							"    var jsonData = pm.response.json();",
							"    ",
							"    // Verify the username",
							"    pm.expect(jsonData.username).to.eql(pm.environment.get(\"random_user\"));",
							"",
							"    // Verify the email",
							"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"random_email\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/auth/session/user",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"session",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "session user jwt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response username matches logged in user name\", function () {",
							"// Parse the response body as JSON",
							"    var jsonData = pm.response.json();",
							"    ",
							"    // Verify the username",
							"    pm.expect(jsonData.username).to.eql(pm.environment.get(\"random_user\"));",
							"",
							"    // Verify the email",
							"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"random_email\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/auth/session/user/token",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"session",
						"user",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Verify cookie is unset",
							"pm.test(\"Verify cookie is unset\", function () {",
							"    pm.expect(pm.response.headers.has(\"Set-Cookie\")).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{host}}/api/auth/logout",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		}
	]
}