// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entities "github.com/adharshmk96/stk-auth/pkg/entities"
	mock "github.com/stretchr/testify/mock"
)

// GroupService is an autogenerated mock type for the GroupService type
type GroupService struct {
	mock.Mock
}

// CreateGroup provides a mock function with given fields: group
func (_m *GroupService) CreateGroup(group *entities.UserGroup) (*entities.UserGroup, error) {
	ret := _m.Called(group)

	var r0 *entities.UserGroup
	var r1 error
	if rf, ok := ret.Get(0).(func(*entities.UserGroup) (*entities.UserGroup, error)); ok {
		return rf(group)
	}
	if rf, ok := ret.Get(0).(func(*entities.UserGroup) *entities.UserGroup); ok {
		r0 = rf(group)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.UserGroup)
		}
	}

	if rf, ok := ret.Get(1).(func(*entities.UserGroup) error); ok {
		r1 = rf(group)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewGroupService interface {
	mock.TestingT
	Cleanup(func())
}

// NewGroupService creates a new instance of GroupService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGroupService(t mockConstructorTestingTNewGroupService) *GroupService {
	mock := &GroupService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
