// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gsk "github.com/adharshmk96/stk/gsk"
	mock "github.com/stretchr/testify/mock"
)

// SessionHandler is an autogenerated mock type for the SessionHandler type
type SessionHandler struct {
	mock.Mock
}

// GetSessionUser provides a mock function with given fields: gc
func (_m *SessionHandler) GetSessionUser(gc *gsk.Context) {
	_m.Called(gc)
}

// GetTokenUser provides a mock function with given fields: gc
func (_m *SessionHandler) GetTokenUser(gc *gsk.Context) {
	_m.Called(gc)
}

// LoginUserSession provides a mock function with given fields: gc
func (_m *SessionHandler) LoginUserSession(gc *gsk.Context) {
	_m.Called(gc)
}

// LoginUserToken provides a mock function with given fields: gc
func (_m *SessionHandler) LoginUserToken(gc *gsk.Context) {
	_m.Called(gc)
}

// LogoutUser provides a mock function with given fields: gc
func (_m *SessionHandler) LogoutUser(gc *gsk.Context) {
	_m.Called(gc)
}

type mockConstructorTestingTNewSessionHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewSessionHandler creates a new instance of SessionHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSessionHandler(t mockConstructorTestingTNewSessionHandler) *SessionHandler {
	mock := &SessionHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
