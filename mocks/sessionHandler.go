// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gsk "github.com/adharshmk96/stk/gsk"
	mock "github.com/stretchr/testify/mock"
)

// sessionHandler is an autogenerated mock type for the sessionHandler type
type sessionHandler struct {
	mock.Mock
}

// GetSessionAccount provides a mock function with given fields: gc
func (_m *sessionHandler) GetSessionAccount(gc *gsk.Context) {
	_m.Called(gc)
}

// GetTokenAccount provides a mock function with given fields: gc
func (_m *sessionHandler) GetTokenAccount(gc *gsk.Context) {
	_m.Called(gc)
}

// LoginAccountSession provides a mock function with given fields: gc
func (_m *sessionHandler) LoginAccountSession(gc *gsk.Context) {
	_m.Called(gc)
}

// LoginAccountToken provides a mock function with given fields: gc
func (_m *sessionHandler) LoginAccountToken(gc *gsk.Context) {
	_m.Called(gc)
}

// LogoutAccount provides a mock function with given fields: gc
func (_m *sessionHandler) LogoutAccount(gc *gsk.Context) {
	_m.Called(gc)
}

type mockConstructorTestingTnewSessionHandler interface {
	mock.TestingT
	Cleanup(func())
}

// newSessionHandler creates a new instance of sessionHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newSessionHandler(t mockConstructorTestingTnewSessionHandler) *sessionHandler {
	mock := &sessionHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
