// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gsk "github.com/adharshmk96/stk/gsk"
	mock "github.com/stretchr/testify/mock"
)

// UserManagmentHandler is an autogenerated mock type for the UserManagmentHandler type
type UserManagmentHandler struct {
	mock.Mock
}

// ChangePassword provides a mock function with given fields: gc
func (_m *UserManagmentHandler) ChangePassword(gc gsk.Context) {
	_m.Called(gc)
}

// GetSessionUser provides a mock function with given fields: gc
func (_m *UserManagmentHandler) GetSessionUser(gc gsk.Context) {
	_m.Called(gc)
}

// GetTokenUser provides a mock function with given fields: gc
func (_m *UserManagmentHandler) GetTokenUser(gc gsk.Context) {
	_m.Called(gc)
}

// LoginUserSession provides a mock function with given fields: gc
func (_m *UserManagmentHandler) LoginUserSession(gc gsk.Context) {
	_m.Called(gc)
}

// LoginUserToken provides a mock function with given fields: gc
func (_m *UserManagmentHandler) LoginUserToken(gc gsk.Context) {
	_m.Called(gc)
}

// LogoutUser provides a mock function with given fields: gc
func (_m *UserManagmentHandler) LogoutUser(gc gsk.Context) {
	_m.Called(gc)
}

// RegisterUser provides a mock function with given fields: gc
func (_m *UserManagmentHandler) RegisterUser(gc gsk.Context) {
	_m.Called(gc)
}

type mockConstructorTestingTNewUserManagmentHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserManagmentHandler creates a new instance of UserManagmentHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserManagmentHandler(t mockConstructorTestingTNewUserManagmentHandler) *UserManagmentHandler {
	mock := &UserManagmentHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
